CREATE TABLE PRODUTO (
	
	ID BIGSERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(100) NOT NULL,
	PRECO NUMERIC(16,2),
	DESCRICAO VARCHAR(255),
	DATA_CADASTRO DATE
);

CREATE TABLE cliente (
	
	id bigserial not null primary key,
	nascimento date not null,
	nome varchar(100) not null,
	endereco varchar(255) not null,
	cpf varchar(14) not null,
	telefone varchar(14),
	email varchar(100),
	data_cadastro date
)

CREATE TABLE VENDA (
	
	ID BIGSERIAL NOT NULL PRIMARY KEY,
	ID_CLIENTE BIGINT REFERENCES CLIENTE(ID) NOT NULL,
	FORMA_PAGAMENTO VARCHAR(30) NOT NULL CHECK ( FORMA_PAGAMENTO IN ('DINHEIRO', 'CARTÃO DE CRÉDITO', 'CARTÃO DE DÉBITO', 'PIX')) NOT NULL,
	TOTAL NUMERIC(16,2) NOT NULL
	
)

CREATE TABLE ITEM_VENDA (
	ID BIGSERIAL NOT NULL PRIMARY KEY,
	ID_VENDA BIGINT  REFERENCES VENDA (ID) NOT NULL,
	ID_PRODUTO BIGINT REFERENCES PRODUTO (ID) NOT NULL,
	QUANTIDADE INTEGER NOT NULL
)

alter table venda
add column data_venda timestamp
default now()

SELECT C.NOME,V.TOTAL_VENDA, P.NOME, IV.QUANTIDADE FROM VENDA AS V
JOIN ITEM_VENDA AS IV ON IV.ID_VENDA = V.ID
JOIN PRODUTO AS P ON P.ID = IV.ID_PRODUTO
JOIN CLIENTE AS C ON C.ID = V.ID_CLIENTE



-- Trigger baixa estoque automático

CREATE OR REPLACE FUNCTION baixa_estoque()
RETURNS trigger AS $body$
BEGIN
UPDATE PRODUTO
SET ESTOQUE = ESTOQUE - NEW.QUANTIDADE
WHERE ID = NEW.id_produto;
RETURN NEW;
END;
$body$
LANGUAGE plpgsql


CREATE TRIGGER trg_baixa_estoque
AFTER INSERT ON ITEM_VENDA
FOR EACH ROW
EXECUTE PROCEDURE baixa_estoque();